{
  "id": "test5-c-cat-section-B",
  "title": "C-CAT Exam Test 5 - Section B",
  "passingPercentage": 50,
  "correctMarks": 3,
  "incorrectMarks": 1,
  "sections": [
    {
      "id": "section-B-computer-fundamentals",
      "title": "Computer Fundamentals",
      "questions": [
        {
          "id": 1,
          "text": "Which of the following is considered the 'brain' of the computer?",
          "options": [
            { "id": "a", "text": "RAM" },
            { "id": "b", "text": "ROM" },
            { "id": "c", "text": "CPU" },
            { "id": "d", "text": "Hard Disk" }
          ],
          "correctOptionId": "c",
          "type": "basic_concepts"
        },
        {
          "id": 2,
          "text": "What is the purpose of an operating system?",
          "options": [
            { "id": "a", "text": "To manage hardware and software resources" },
            { "id": "b", "text": "To process data" },
            { "id": "c", "text": "To connect to the internet" },
            { "id": "d", "text": "To create documents" }
          ],
          "correctOptionId": "a",
          "type": "operating_systems"
        },
        {
          "id": 3,
          "text": "Which of the following is a volatile memory?",
          "options": [
            { "id": "a", "text": "ROM" },
            { "id": "b", "text": "PROM" },
            { "id": "c", "text": "EPROM" },
            { "id": "d", "text": "RAM" }
          ],
          "correctOptionId": "d",
          "type": "memory"
        },
        {
          "id": 4,
          "text": "The binary equivalent of decimal number 13 is:",
          "options": [
            { "id": "a", "text": "1101" },
            { "id": "b", "text": "1011" },
            { "id": "c", "text": "1110" },
            { "id": "d", "text": "1001" }
          ],
          "correctOptionId": "a",
          "type": "number_systems"
        },
        {
          "id": 5,
          "text": "What does the acronym \"HTTP\" stand for?",
          "options": [
            { "id": "a", "text": "HyperText Transfer Protocol" },
            { "id": "b", "text": "Hyper Transfer Text Protocol" },
            { "id": "c", "text": "High Technology Transfer Protocol" },
            { "id": "d", "text": "Home Text Transfer Protocol" }
          ],
          "correctOptionId": "a",
          "type": "networking"
        },
        {
          "id": 6,
          "text": "Which of the following is an input device?",
          "options": [
            { "id": "a", "text": "Printer" },
            { "id": "b", "text": "Monitor" },
            { "id": "c", "text": "Keyboard" },
            { "id": "d", "text": "Speaker" }
          ],
          "correctOptionId": "c",
          "type": "hardware"
        },
        {
          "id": 7,
          "text": "What is a firewall in a computer network?",
          "options": [
            { "id": "a", "text": "A program that scans for viruses" },
            { "id": "b", "text": "A hardware or software-based network security system" },
            { "id": "c", "text": "A device that amplifies network signals" },
            { "id": "d", "text": "A tool for managing network cables" }
          ],
          "correctOptionId": "b",
          "type": "networking_security"
        },
        {
          "id": 8,
          "text": "Which generation of computers used Integrated Circuits (ICs)?",
          "options": [
            { "id": "a", "text": "First Generation" },
            { "id": "b", "text": "Second Generation" },
            { "id": "c", "text": "Third Generation" },
            { "id": "d", "text": "Fourth Generation" }
          ],
          "correctOptionId": "c",
          "type": "computer_generations"
        },
        {
          "id": 9,
          "text": "What is the full form of LAN?",
          "options": [
            { "id": "a", "text": "Local Area Network" },
            { "id": "b", "text": "Long Area Network" },
            { "id": "c", "text": "Limited Area Network" },
            { "id": "d", "text": "Large Area Network" }
          ],
          "correctOptionId": "a",
          "type": "networking"
        },
        {
          "id": 10,
          "text": "Which type of software is Microsoft Word?",
          "options": [
            { "id": "a", "text": "System Software" },
            { "id": "b", "text": "Application Software" },
            { "id": "c", "text": "Utility Software" },
            { "id": "d", "text": "Operating System" }
          ],
          "correctOptionId": "b",
          "type": "software_types"
        }
      ]
    },
    {
      "id": "section-B-c-programming",
      "title": "C Programming",
      "questions": [
        {
          "id": 11,
          "text": "What is the output of the following C code snippet?",
          "codeSnippet": "#include <stdio.h>\nint main() {\n    int x = 10;\n    printf(\"%d\", x++);\n    return 0;\n}",
          "options": [
            { "id": "a", "text": "10" },
            { "id": "b", "text": "11" },
            { "id": "c", "text": "9" },
            { "id": "d", "text": "Compiler error" }
          ],
          "correctOptionId": "a",
          "type": "code_output"
        },
        {
          "id": 12,
          "text": "Which of the following is NOT a valid C variable name?",
          "options": [
            { "id": "a", "text": "`_myVar`" },
            { "id": "b", "text": "`my_var`" },
            { "id": "c", "text": "`1myVar`" },
            { "id": "d", "text": "`myVar1`" }
          ],
          "correctOptionId": "c",
          "type": "syntax_rules"
        },
        {
          "id": 13,
          "text": "What will be the output of the following C program?",
          "codeSnippet": "#include <stdio.h>\n\nvoid swap(int a, int b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\nint main() {\n    int x = 5, y = 10;\n    swap(x, y);\n    printf(\"%d %d\\n\", x, y);\n    return 0;\n}",
          "options": [
            { "id": "a", "text": "10 5" },
            { "id": "b", "text": "5 10" },
            { "id": "c", "text": "5 5" },
            { "id": "d", "text": "10 10" }
          ],
          "correctOptionId": "b",
          "type": "code_output"
        },
        {
          "id": 14,
          "text": "What is the correct way to declare a pointer to an integer in C?",
          "options": [
            { "id": "a", "text": "`int* ptr;`" },
            { "id": "b", "text": "`*int ptr;`" },
            { "id": "c", "text": "`int ptr*;`" },
            { "id": "d", "text": "`ptr int;`" }
          ],
          "correctOptionId": "a",
          "type": "pointers"
        },
        {
          "id": 15,
          "text": "What does `malloc()` return on success?",
          "options": [
            { "id": "a", "text": "`void` pointer" },
            { "id": "b", "text": "`int` pointer" },
            { "id": "c", "text": "`NULL`" },
            { "id": "d", "text": "`char` pointer" }
          ],
          "correctOptionId": "a",
          "type": "memory_management"
        },
        {
          "id": 16,
          "text": "What is the output of the following C code snippet?",
          "codeSnippet": "#include <stdio.h>\nint main() {\n    int arr[] = {10, 20, 30, 40, 50};\n    printf(\"%d\", *(arr + 2));\n    return 0;\n}",
          "options": [
            { "id": "a", "text": "10" },
            { "id": "b", "text": "20" },
            { "id": "c", "text": "30" },
            { "id": "d", "text": "40" }
          ],
          "correctOptionId": "c",
          "type": "code_output"
        },
        {
          "id": 17,
          "text": "Which of the following is a logical operator in C?",
          "options": [
            { "id": "a", "text": "`+`" },
            { "id": "b", "text": "`&&`" },
            { "id": "c", "text": "`=`" },
            { "id": "d", "text": "`==`" }
          ],
          "correctOptionId": "b",
          "type": "operators"
        },
        {
          "id": 18,
          "text": "What is the purpose of the `break` statement in C?",
          "options": [
            { "id": "a", "text": "To exit a loop or switch statement" },
            { "id": "b", "text": "To skip the current iteration of a loop" },
            { "id": "c", "text": "To terminate the program" },
            { "id": "d", "text": "To define a new function" }
          ],
          "correctOptionId": "a",
          "type": "control_flow"
        },
        {
          "id": 19,
          "text": "What is the size of `char` data type in C?",
          "options": [
            { "id": "a", "text": "1 byte" },
            { "id": "b", "text": "2 bytes" },
            { "id": "c", "text": "4 bytes" },
            { "id": "d", "text": "8 bytes" }
          ],
          "correctOptionId": "a",
          "type": "data_types"
        },
        {
          "id": 20,
          "text": "Which of the following storage classes has a default initial value of zero?",
          "options": [
            { "id": "a", "text": "`auto`" },
            { "id": "b", "text": "`register`" },
            { "id": "c", "text": "`static`" },
            { "id": "d", "text": "`extern`" }
          ],
          "correctOptionId": "c",
          "type": "storage_classes"
        },
        {
          "id": 21,
          "text": "What is recursion in C programming?",
          "options": [
            { "id": "a", "text": "A function calling itself" },
            { "id": "b", "text": "A loop that never ends" },
            { "id": "c", "text": "A type of data structure" },
            { "id": "d", "text": "A way to handle errors" }
          ],
          "correctOptionId": "a",
          "type": "functions"
        },
        {
          "id": 22,
          "text": "What is the output of the following C code?",
          "codeSnippet": "#include <stdio.h>\nint main() {\n    int i = 0;\n    for (i=0; i<3; i++) {\n        printf(\"C-DAC \");\n    }\n    return 0;\n}",
          "options": [
            { "id": "a", "text": "C-DAC" },
            { "id": "b", "text": "C-DAC C-DAC" },
            { "id": "c", "text": "C-DAC C-DAC C-DAC" },
            { "id": "d", "text": "Error" }
          ],
          "correctOptionId": "c",
          "type": "code_output"
        },
        {
          "id": 23,
          "text": "Which header file is necessary for using `printf()` and `scanf()` functions?",
          "options": [
            { "id": "a", "text": "`stdlib.h`" },
            { "id": "b", "text": "`string.h`" },
            { "id": "c", "text": "`math.h`" },
            { "id": "d", "text": "`stdio.h`" }
          ],
          "correctOptionId": "d",
          "type": "header_files"
        },
        {
          "id": 24,
          "text": "What is the result of `5 / 2` in C (integer division)?",
          "options": [
            { "id": "a", "text": "2.5" },
            { "id": "b", "text": "2" },
            { "id": "c", "text": "3" },
            { "id": "d", "text": "Compiler error" }
          ],
          "correctOptionId": "b",
          "type": "operators"
        },
        {
          "id": 25,
          "text": "What is the maximum value an `unsigned char` can hold?",
          "options": [
            { "id": "a", "text": "127" },
            { "id": "b", "text": "255" },
            { "id": "c", "text": "32767" },
            { "id": "d", "text": "65535" }
          ],
          "correctOptionId": "b",
          "type": "data_types"
        },
        {
          "id": 26,
          "text": "What is the purpose of the `typedef` keyword in C?",
          "options": [
            { "id": "a", "text": "To define a new function" },
            { "id": "b", "text": "To create a new data type alias" },
            { "id": "c", "text": "To include a header file" },
            { "id": "d", "text": "To declare a global variable" }
          ],
          "correctOptionId": "b",
          "type": "keywords"
        }
      ]
    },
    {
      "id": "section-B-data-structures",
      "title": "Data Structures",
      "questions": [
        {
          "id": 27,
          "text": "Which of the following data structures is LIFO (Last In, First Out)?",
          "options": [
            { "id": "a", "text": "Queue" },
            { "id": "b", "text": "Stack" },
            { "id": "c", "text": "Linked List" },
            { "id": "d", "text": "Tree" }
          ],
          "correctOptionId": "b",
          "type": "basic_concepts"
        },
        {
          "id": 28,
          "text": "The process of inserting an element into a stack is called:",
          "options": [
            { "id": "a", "text": "Pop" },
            { "id": "b", "text": "Push" },
            { "id": "c", "text": "Enqueue" },
            { "id": "d", "text": "Dequeue" }
          ],
          "correctOptionId": "b",
          "type": "stack_operations"
        },
        {
          "id": 29,
          "text": "In a circular linked list, how do you find the last node?",
          "options": [
            { "id": "a", "text": "The `next` pointer of the last node points to `NULL`." },
            { "id": "b", "text": "The `next` pointer of the last node points to the first node." },
            { "id": "c", "text": "The `prev` pointer of the last node points to the first node." },
            { "id": "d", "text": "It has a special `end` pointer." }
          ],
          "correctOptionId": "b",
          "type": "linked_lists"
        },
        {
          "id": 30,
          "text": "Which data structure is used to implement BFS (Breadth-First Search) algorithm?",
          "options": [
            { "id": "a", "text": "Stack" },
            { "id": "b", "text": "Queue" },
            { "id": "c", "text": "Array" },
            { "id": "d", "text": "Linked List" }
          ],
          "correctOptionId": "b",
          "type": "graph_traversal"
        },
        {
          "id": 31,
          "text": "What is the time complexity of searching an element in a sorted array using Binary Search?",
          "options": [
            { "id": "a", "text": "$O(n)$" },
            { "id": "b", "text": "$O(log n)$" },
            { "id": "c", "text": "$O(n^2)$" },
            { "id": "d", "text": "$O(1)$" }
          ],
          "correctOptionId": "b",
          "type": "algorithms_complexity"
        },
        {
          "id": 32,
          "text": "Which of the following is a non-linear data structure?",
          "options": [
            { "id": "a", "text": "Array" },
            { "id": "b", "text": "Linked List" },
            { "id": "c", "text": "Tree" },
            { "id": "d", "text": "Queue" }
          ],
          "correctOptionId": "c",
          "type": "data_structure_types"
        },
        {
          "id": 33,
          "text": "A full binary tree with 'n' leaves has how many internal nodes?",
          "options": [
            { "id": "a", "text": "$n-1$" },
            { "id": "b", "text": "$n$" },
            { "id": "c", "text": "$2n-1$" },
            { "id": "d", "text": "$2n$" }
          ],
          "correctOptionId": "a",
          "type": "trees"
        },
        {
          "id": 34,
          "text": "What is a \"dequeue\" operation in a queue?",
          "options": [
            { "id": "a", "text": "Adding an element to the front" },
            { "id": "b", "text": "Removing an element from the front" },
            { "id": "c", "text": "Adding an element to the rear" },
            { "id": "d", "text": "Removing an element from the rear" }
          ],
          "correctOptionId": "b",
          "type": "queue_operations"
        },
        {
          "id": 35,
          "text": "Which sorting algorithm has the worst-case time complexity of $O(n^2)$?",
          "options": [
            { "id": "a", "text": "Merge Sort" },
            { "id": "b", "text": "Quick Sort" },
            { "id": "c", "text": "Bubble Sort" },
            { "id": "d", "text": "Heap Sort" }
          ],
          "correctOptionId": "c",
          "type": "sorting_algorithms"
        },
        {
          "id": 36,
          "text": "The term \"hashing\" is used to:",
          "options": [
            { "id": "a", "text": "Encrypt data" },
            { "id": "b", "text": "Store and retrieve data quickly" },
            { "id": "c", "text": "Sort data" },
            { "id": "d", "text": "Compress data" }
          ],
          "correctOptionId": "b",
          "type": "hashing"
        }
      ]
    },
    {
      "id": "section-B-oop-concepts",
      "title": "Object-Oriented Programming (OOP) Concepts",
      "questions": [
        {
          "id": 37,
          "text": "Which of the following is NOT an OOP concept?",
          "options": [
            { "id": "a", "text": "Encapsulation" },
            { "id": "b", "text": "Inheritance" },
            { "id": "c", "text": "Polymorphism" },
            { "id": "d", "text": "Iteration" }
          ],
          "correctOptionId": "d",
          "type": "oop_fundamentals"
        },
        {
          "id": 38,
          "text": "The ability of an object to take on many forms is known as:",
          "options": [
            { "id": "a", "text": "Encapsulation" },
            { "id": "b", "text": "Abstraction" },
            { "id": "c", "text": "Inheritance" },
            { "id": "d", "text": "Polymorphism" }
          ],
          "correctOptionId": "d",
          "type": "polymorphism"
        },
        {
          "id": 39,
          "text": "Which of the following best describes encapsulation?",
          "options": [
            { "id": "a", "text": "Hiding the implementation details from the user." },
            { "id": "b", "text": "Creating new classes from existing classes." },
            { "id": "c", "text": "Allowing objects to take on different forms." },
            { "id": "d", "text": "Combining data and functions into a single unit." }
          ],
          "correctOptionId": "d",
          "type": "encapsulation"
        },
        {
          "id": 40,
          "text": "A class is a:",
          "options": [
            { "id": "a", "text": "Blueprint for creating objects" },
            { "id": "b", "text": "Function" },
            { "id": "c", "text": "Variable" },
            { "id": "d", "text": "Data structure" }
          ],
          "correctOptionId": "a",
          "type": "classes_objects"
        },
        {
          "id": 41,
          "text": "What is a constructor in OOP?",
          "options": [
            { "id": "a", "text": "A function that destroys an object" },
            { "id": "b", "text": "A special member function used to initialize objects" },
            { "id": "c", "text": "A regular member function" },
            { "id": "d", "text": "A function that modifies an object's state" }
          ],
          "correctOptionId": "b",
          "type": "constructors"
        },
        {
          "id": 42,
          "text": "Which keyword is used to achieve inheritance in C++?",
          "options": [
            { "id": "a", "text": "`implements`" },
            { "id": "b", "text": "`inherits`" },
            { "id": "c", "text": "`extends`" },
            { "id": "d", "text": "`public`, `protected`, `private` (in class definition)" }
          ],
          "correctOptionId": "d",
          "type": "inheritance"
        },
        {
          "id": 43,
          "text": "What is method overloading?",
          "options": [
            {
              "id": "a",
              "text": "Defining multiple methods with the same name but different parameters in the same class."
            },
            {
              "id": "b",
              "text": "Defining a method in a subclass with the same name and signature as a method in its superclass."
            },
            { "id": "c", "text": "Inheriting methods from multiple classes." },
            { "id": "d", "text": "Using a single method to perform multiple tasks." }
          ],
          "correctOptionId": "a",
          "type": "polymorphism"
        },
        {
          "id": 44,
          "text": "`this` pointer in C++ points to:",
          "options": [
            { "id": "a", "text": "The class itself" },
            { "id": "b", "text": "The base class" },
            { "id": "c", "text": "The current object" },
            { "id": "d", "text": "The derived class" }
          ],
          "correctOptionId": "c",
          "type": "pointers"
        },
        {
          "id": 45,
          "text": "Which concept allows a class to have properties and behaviors that are shared from another class?",
          "options": [
            { "id": "a", "text": "Encapsulation" },
            { "id": "b", "text": "Abstraction" },
            { "id": "c", "text": "Inheritance" },
            { "id": "d", "text": "Polymorphism" }
          ],
          "correctOptionId": "c",
          "type": "inheritance"
        }
      ]
    },
    {
      "id": "section-B-operating-systems-networking",
      "title": "Operating Systems & Networking",
      "questions": [
        {
          "id": 46,
          "text": "Which of the following is NOT a type of operating system?",
          "options": [
            { "id": "a", "text": "Real-time operating system" },
            { "id": "b", "text": "Multi-user operating system" },
            { "id": "c", "text": "Single-tasking operating system" },
            { "id": "d", "text": "Database management system" }
          ],
          "correctOptionId": "d",
          "type": "operating_systems"
        },
        {
          "id": 47,
          "text": "What is a deadlock in an operating system?",
          "options": [
            { "id": "a", "text": "When a process never terminates" },
            {
              "id": "b",
              "text": "When two or more processes are blocked indefinitely, waiting for each other"
            },
            { "id": "c", "text": "When a system runs out of memory" },
            { "id": "d", "text": "When a process tries to access an invalid memory location" }
          ],
          "correctOptionId": "b",
          "type": "operating_systems_concepts"
        },
        {
          "id": 48,
          "text": "Which layer of the OSI model is responsible for logical addressing and routing?",
          "options": [
            { "id": "a", "text": "Physical Layer" },
            { "id": "b", "text": "Data Link Layer" },
            { "id": "c", "text": "Network Layer" },
            { "id": "d", "text": "Transport Layer" }
          ],
          "correctOptionId": "c",
          "type": "networking_osi_model"
        },
        {
          "id": 49,
          "text": "What is the primary purpose of paging in an operating system?",
          "options": [
            { "id": "a", "text": "To prevent deadlocks" },
            {
              "id": "b",
              "text": "To manage virtual memory and allow non-contiguous memory allocation"
            },
            { "id": "c", "text": "To schedule processes efficiently" },
            { "id": "d", "text": "To handle I/O operations" }
          ],
          "correctOptionId": "b",
          "type": "operating_systems_memory_management"
        },
        {
          "id": 50,
          "text": "Which of the following is a connection-oriented protocol?",
          "options": [
            { "id": "a", "text": "UDP" },
            { "id": "b", "text": "ICMP" },
            { "id": "c", "text": "TCP" },
            { "id": "d", "text": "ARP" }
          ],
          "correctOptionId": "c",
          "type": "networking_protocols"
        },
        {
          "id": 51,
          "text": "What is throughput in the context of operating systems?",
          "options": [
            { "id": "a", "text": "The number of processes completed per unit time" },
            { "id": "b", "text": "The time taken for a process to complete" },
            { "id": "c", "text": "The amount of CPU time allocated to a process" },
            { "id": "d", "text": "The number of I/O operations performed" }
          ],
          "correctOptionId": "a",
          "type": "operating_systems_performance"
        }
      ]
    }
  ]
}
